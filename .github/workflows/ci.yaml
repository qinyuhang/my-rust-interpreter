name: CI

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace
      - name: count test cases
        run: |
          output=$(cargo test --workspace 2>&1)
          #echo "$output"
          echo "$output" | grep "^test result:" | awk '{
              passed += $4;
              failed += $6;
              ignored += $8;
              measured += $10;
              filtered_out += $12;
          } END {
              print "passed: ", passed
              print "failed: ", failed
              print "ignored: ", ignored
              print "measured: ", measured
              print "filtered out: ", filtered_out;
          }'
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: cargo build examples
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --examples
      - name: cargo run
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release --all-features -- run ./examples/fib.mok
      - name: bench
        run: |
          echo "-----------------"
          echo "test node js"
          /usr/bin/time node examples/fib.js &&
          sleep 5
          echo "-----------------"
          echo "test my interpreter hot run"
          /usr/bin/time ./target/release/my-rust-interpreter run ./examples/fib.mok &&
          sleep 5
          echo "-----------------"
          echo "test my interpreter compiled run"
          /usr/bin/time ./target/release/examples/fib_interpreter &&
          sleep 5
          echo "-----------------"
          echo "test rust native"
          /usr/bin/time ./target/release/examples/fib &&
          sleep 5
          echo "-----------------"
          echo "test node js fib using loop"
          /usr/bin/time node examples/fib_loop.js &&
          sleep 5
          echo "-----------------"
          echo "test my interpreter hot run using loop"
          /usr/bin/time ./target/release/my-rust-interpreter run ./examples/fib_loop.mok &&
          sleep 5
          echo "-----------------"
          echo "test my interpreter compiled run using loop"
          /usr/bin/time ./target/release/examples/fib_loop_interpreter &&
          sleep 5
          echo "-----------------"
          echo "test rust native using loop"
          /usr/bin/time ./target/release/examples/fib_loop &&
          sleep 5
          echo "DONE"
